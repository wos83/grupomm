@function remove-nth($list, $index) {
  $result: null;

  @if type-of($index) != number {
    @warn "$index: #{quote($index)} is not a number for `remove-nth`.";
  } @else if $index == 0 {
    @warn "List index 0 must be a non-zero integer for `remove-nth`.";
  } @else if abs($index) > length($list) {
    @warn "List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.";
  } @else {
    $result: ();
    $index: if($index < 0, length($list) + $index + 1, $index);

    @for $i from 1 through length($list) {
      @if $i != $index {
        $result: append($result, nth($list, $i));
      }
    }
  }

  @return $result;
}

/**
 * Efeito de transição.
 * 
 * Exemplo de uso:
 * @include transition(prop 0.5s cubic-bezier(0.16, 0.85, 0.45, 1));
 */
@mixin transition($transition...){
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

/**
 * Efeito de opacidade.
 * 
 * Exemplo de uso:
 * img.preload{
 *   @include Opacity(0);
 *   
 *   &.complete{
 *     @include Opacity(1);
 *   }
 * }
 */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}

/**
 * Efeito de deixar algo em preto e branco.
 * 
 * Exemplo de uso:
 * img.preload{
 *   @include grayscale("on");
 *   
 *   &:hover {
 *     @include grayscale("off");
 *   }
 * }
 */
@mixin grayscale( $toggle: "on", $percentage: 1 ) {
  $svg-type: "matrix";
  $svg-value: "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0";
  $ie-alpha: alpha(#{"opacity="}round( $percentage * 100 ) );

  @if $percentage != 1 {
    $svg-type: "saturate";
    $svg-value: $percentage;
  }

  @if $toggle == "on" {
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'#{$svg-type}\' values=\'#{$svg-value}\'/></filter></svg>#grayscale"); // Firefox 10+, Firefox on Android
    filter: gray $ie-alpha; // IE6-9
    -webkit-filter: grayscale( round( $percentage * 100% ) ); // Chrome 19+, Safari 6+, Safari 6+ iOS
    filter: grayscale( round( $percentage * 100% ) ); // Catch-all
  }

  @if $toggle == "off" {
    @if $svg-type == "saturate" {
      filter: none;
    } @else {
      filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
    }
    -webkit-filter: grayscale(0%);
    filter: grayscale(0);
  }
}

/**
 * Efeito de rotação.
 * 
 * Exemplo de uso:
 * div.preload {
 *   @include rotate(90);
 * }
 */
@mixin rotate($degrees) {
  transform: rotate($degrees);
  -webkit-transform: rotate($degrees);
  -moz-transform: rotate($degrees);
  -ms-transform: rotate($degrees);
  -o-transform: rotate($degrees);
}

@mixin origin($args...) {
  transform-origin: $args;
  -webkit-transform-origin: $args;
  -moz-transform-origin: $args;
  -ms-transform-origin: $args;
}
