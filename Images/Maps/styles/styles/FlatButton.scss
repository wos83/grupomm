@import './mixedins/effects.scss';

button.flat {
  flex: 0 1 var(--header-size);

  color: var(--theme-nav-link-color);

  font-size: .8333333333rem;
  font-weight: 600;
  min-width: var(--header-size);
  height: var(--header-size);
  padding: .5em .5em;

  background-color: transparent;
  border: none;
  cursor: pointer;

  @include transition(color .20s ease-in-out, background-color .20s ease-in-out, border-color .20s ease-in-out);

  &.alert {
    color: var(--theme-gray-1100);
  }
  &.danger {
    color: var(--theme-danger);
  }

  > svg {
    /* Place the icon on the text baseline. */
    position: relative;

    display: block;

    /* Prevent the icon from shrinking inside a flex container. */
    flex-shrink: 0;

    /* Scale the icon to match the font-size of the parent element. */
    height: 100%;

    /* Let the icon take whatever color the parent has. */
    fill: currentColor;

    /*
     * If the icon is used on a link, which has a color transition,
     * we can also use a transition on the fill value.
    */
    transition: fill .3s;
  }

  &:hover {
    color: var(--theme-nav-link-hover-color);
    background-color: var(--theme-bg-navbar-glass-hover);
  }
  &.danger:hover {
    color: var(--theme-colored-link-hover-color-danger);
  }
}
